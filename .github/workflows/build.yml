on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    container: nixpkgs/nix-flakes
    strategy:
      matrix:
        version:
          - 16
          - 16.3.0
          - 16.2.0
          - 16.1.0
          - 16.0.0
          - 15
          - 15.14.0
          - 15.13.0
          - 15.12.0
          - 15.11.0
          - 15.10.0
          - 15.9.0
          - 15.8.0
          - 15.7.0
          - 15.6.0
          - 15.5.1
          - 15.5.0
          - 15.4.0
          - 15.3.0
          - 15.2.1
          - 15.2.0
          - 15.1.0
          - 15.0.1
          - 15.0.0
          - 14.17.0
          - 14.16.1
          - 14.16.0
          - 14.15.5
          - 14.15.4
          - 14.15.3
          - 14.15.2
          - 14.15.1
          - 14.15.0
          - 14.14.0
          - 14.13.1
          - 14.13.0
          - 14.12.0
          - 14.11.0
          - 14.10.1
          - 14.10.0
          - 14.9.0
          - 14.8.0
          - 14.7.0
          - 14.6.0
          - 14.5.0
          - 14.4.0
          - 14.3.0
          - 14.2.0
          - 14.1.0
          - 13.14.0
          - 13.13.0
          - 13.12.0
          - 13.11.0
          - 13.10.1
          - 13.10.0
          - 13.9.0
          - 13.8.0
          - 13.7.0
          - 13.6.0
          - 13.5.0
          - 13.4.0
          - 13.3.0
          - 13.2.0
          - 13.1.0
          - 13.0.1
          - 13.0.0
    steps:
      - name: Setup nix features
        run: echo "experimental-features = nix-command flakes ca-references" > /etc/nix/nix.conf
      - name: Install CI dependencies
        run: nix profile install nixpkgs#git nixpkgs#bash nixpkgs#cachix
      - name: Setup env
        run: |
          source $ENV
          echo "PATH=$PATH" >> $GITHUB_ENV 
      - uses: actions/checkout@v1
      - name: Add cachix "nix-node" entry
        run: cachix use nix-node
      - name: build ${{ matrix.version }}
        run: nix build .#${{ matrix.version }}
      - name: publish ${{ matrix.version }}
        run: cachix push nix-node `cd -P result && pwd`
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
